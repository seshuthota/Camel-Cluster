spring:
  application:
    name: camel-consumer
  profiles:
    active: dev
  
  datasource:
    url: jdbc:postgresql://localhost:5432/camel_cluster
    username: camel_user
    password: camel_pass
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        generate_statistics: true
    open-in-view: false

  # ActiveMQ configuration
  activemq:
    broker-url: tcp://localhost:61616
    user: admin
    password: admin
    pool:
      enabled: true
      max-connections: 10
      idle-timeout: 30000

# Camel configuration
camel:
  springboot:
    name: camel-consumer
    main-run-controller: true
    health-check-enabled: true
    health-check-registry-enabled: true
  cluster:
    service:
      hazelcast:
        id: consumer-cluster
        connection-timeout: 10000

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,camel
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Hazelcast configuration
hazelcast:
  cluster:
    name: camel-cluster
  network:
    join:
      multicast:
        enabled: false
      tcp-ip:
        enabled: true
        members:
          - 127.0.0.1:5701
          - 127.0.0.1:5702
          - 127.0.0.1:5703

# Application specific configuration
app:
  cluster:
    node-id: consumer-${random.uuid}
    node-type: CONSUMER
  consumer:
    concurrent-consumers: 3
    max-concurrent-consumers: 6
    file-polling-interval: 10000
    input-directory: /tmp/camel-cluster/orders
    batch-size: 10
    processing-timeout: 30000

# Logging configuration
logging:
  level:
    com.example: INFO
    org.apache.camel: INFO
    com.hazelcast: WARN
    org.springframework.jms: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{nodeId}] %logger{36} - %msg%n"

---
# Docker profile
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://postgres:5432/camel_cluster
  activemq:
    broker-url: tcp://activemq:61616

hazelcast:
  network:
    join:
      tcp-ip:
        members:
          - camel-producer:5701
          - camel-consumer-1:5701
          - camel-consumer-2:5701
          - camel-coordinator:5701

app:
  cluster:
    node-id: consumer-${HOSTNAME:consumer-unknown}
  consumer:
    input-directory: /shared/orders

---
# Production profile
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
  jpa:
    show-sql: false
    properties:
      hibernate:
        generate_statistics: false

app:
  consumer:
    concurrent-consumers: 5
    max-concurrent-consumers: 10
    file-polling-interval: 5000

logging:
  level:
    root: INFO
    com.example: INFO

---
# Test profile
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password: ""
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true

  activemq:
    broker-url: vm://localhost?broker.persistent=false

app:
  consumer:
    concurrent-consumers: 1
    file-polling-interval: 2000
    input-directory: /tmp/test-orders
    processing-timeout: 5000

camel:
  springboot:
    auto-startup: true 